/* O projeto só funciona se inicializado pela Home*/
package visao;

import controle.ControleDep;
import controle.ControleFunc;
import modelo.ManterDep;
import modelo.ManterFunc;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.logging.Level;
import java.util.logging.Logger;

public class ListarFunc extends javax.swing.JFrame {

    /**
     * Creates new form ListarFunc
     */
    public ListarFunc(String parametro) {
        if (!"acessoPermitido".equals(parametro)) {
            JOptionPane.showMessageDialog(null, "Acesso negado. Navegue através da Home.", "Erro de Acesso", JOptionPane.ERROR_MESSAGE);
            System.exit(0); 
        }
        initComponents();
    }


    ListarFunc() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    
    private void verificarAcesso(String parametro) {
        if (!"acessoPermitido".equals(parametro)) {
            JOptionPane.showMessageDialog(null, "Acesso negado. Navegue através da Home.", "Erro de Acesso", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTlistarfunc = new javax.swing.JTable();
        jTextField6 = new javax.swing.JTextField();
        jBatualizarfunc1 = new javax.swing.JButton();
        jBdeletarfunc = new javax.swing.JButton();
        jBhome5 = new javax.swing.JButton();
        jBimprimirfunc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTlistarfunc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CPF", "Nome", "Formação", "Cargo", "Remuneração", "Departamento", "Idade", "Email", "Departamento_id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTlistarfunc);
        if (jTlistarfunc.getColumnModel().getColumnCount() > 0) {
            jTlistarfunc.getColumnModel().getColumn(0).setMinWidth(0);
            jTlistarfunc.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTlistarfunc.getColumnModel().getColumn(0).setMaxWidth(0);
            jTlistarfunc.getColumnModel().getColumn(6).setMinWidth(0);
            jTlistarfunc.getColumnModel().getColumn(6).setPreferredWidth(0);
            jTlistarfunc.getColumnModel().getColumn(6).setMaxWidth(0);
            jTlistarfunc.getColumnModel().getColumn(7).setMinWidth(0);
            jTlistarfunc.getColumnModel().getColumn(7).setPreferredWidth(0);
            jTlistarfunc.getColumnModel().getColumn(7).setMaxWidth(0);
            jTlistarfunc.getColumnModel().getColumn(8).setMinWidth(0);
            jTlistarfunc.getColumnModel().getColumn(8).setPreferredWidth(0);
            jTlistarfunc.getColumnModel().getColumn(8).setMaxWidth(0);
        }

        jTextField6.setEditable(false);
        jTextField6.setBackground(new java.awt.Color(0, 0, 0));
        jTextField6.setFont(new java.awt.Font("Segoe UI Black", 3, 24)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(255, 255, 255));
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField6.setText("    JDEVS.getFuncionários() ");

        jBatualizarfunc1.setBackground(new java.awt.Color(153, 153, 153));
        jBatualizarfunc1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jBatualizarfunc1.setText("Atualizar");
        jBatualizarfunc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBatualizarfunc1ActionPerformed(evt);
            }
        });

        jBdeletarfunc.setBackground(new java.awt.Color(153, 153, 153));
        jBdeletarfunc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jBdeletarfunc.setText("Deletar");
        jBdeletarfunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBdeletarfuncActionPerformed(evt);
            }
        });

        jBhome5.setBackground(new java.awt.Color(153, 153, 153));
        jBhome5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jBhome5.setText("Home");
        jBhome5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBhome5ActionPerformed(evt);
            }
        });

        jBimprimirfunc.setBackground(new java.awt.Color(153, 153, 153));
        jBimprimirfunc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jBimprimirfunc.setText("Imprimir");
        jBimprimirfunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBimprimirfuncActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 945, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jBhome5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBimprimirfunc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBdeletarfunc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBatualizarfunc1))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBdeletarfunc)
                    .addComponent(jBhome5)
                    .addComponent(jBimprimirfunc)
                    .addComponent(jBatualizarfunc1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBimprimirfuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBimprimirfuncActionPerformed
        // TODO add your handling code here:
        try {
            ManterFunc manterFunc = new ManterFunc();
            ManterDep manterDep = new ManterDep();
            DefaultTableModel modeloTabela = (DefaultTableModel) jTlistarfunc.getModel();
            ArrayList<ControleFunc> funcionarios = manterFunc.PesquisarTudoF();
            ArrayList<ControleDep> departamentos = manterDep.PesquisarTudoD();
            Map<Integer, String> mapaDepartamentos = new HashMap<>();
            for (ControleDep dep : departamentos) {
                mapaDepartamentos.put(dep.getId(), dep.getNome());
            }
            modeloTabela.setRowCount(0);
            if (funcionarios.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nenhum Funcionário Encontrado!");
            } else {
                for (ControleFunc func : funcionarios) {
                    String nomeDepartamento = mapaDepartamentos.get(func.getDepartamento_id());
                    modeloTabela.addRow(new Object[]{
                        func.getCPF(),
                        func.getNome(),
                        func.getFormacao(),
                        func.getCargo(),
                        func.getRemuneracao(),
                        nomeDepartamento,
                        func.getIdade(),
                        func.getEmail(),
                        func.getDepartamento_id()
                    });
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(ListarFunc.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao Listar Funcionários!");
        }


    }//GEN-LAST:event_jBimprimirfuncActionPerformed

    private void jBatualizarfunc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBatualizarfunc1ActionPerformed
        // TODO add your handling code here:
        int linhaSelecionada = jTlistarfunc.getSelectedRow();
        if (linhaSelecionada != -1) {
            try {
                String CPF = (String) jTlistarfunc.getValueAt(linhaSelecionada, 0);
                String nome = (String) jTlistarfunc.getValueAt(linhaSelecionada, 1);
                String formacao = (String) jTlistarfunc.getValueAt(linhaSelecionada, 2);
                String cargo = (String) jTlistarfunc.getValueAt(linhaSelecionada, 3);
                double remuneracao = (double) jTlistarfunc.getValueAt(linhaSelecionada, 4);
                String nomeDepartamento = (String) jTlistarfunc.getValueAt(linhaSelecionada, 5);
                int idade = (int) jTlistarfunc.getValueAt(linhaSelecionada, 6);
                String email = (String) jTlistarfunc.getValueAt(linhaSelecionada, 7);
                int departamento_id = (int) jTlistarfunc.getValueAt(linhaSelecionada, 8);

                AltFunc altFunc = new AltFunc(nome, idade, cargo, CPF, email, formacao, remuneracao, nomeDepartamento, departamento_id);
                altFunc.setVisible(true);
                this.dispose();
            } catch (ClassCastException e) {
                JOptionPane.showMessageDialog(null, "Erro ao converter valores da tabela. Verifique os tipos de dados!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma linha para atualizar!");

        }


    }//GEN-LAST:event_jBatualizarfunc1ActionPerformed

    private void jBdeletarfuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBdeletarfuncActionPerformed
        // TODO add your handling code here:

        try {
            int linhaSelecionada = jTlistarfunc.getSelectedRow();
            if (linhaSelecionada != -1) {
                String CPF = (String) jTlistarfunc.getValueAt(linhaSelecionada, 0);
                ControleFunc func = new ControleFunc();
                func.setCPF(CPF);
                ManterFunc daofunc = new ManterFunc();
                daofunc.deletarFunc(func);
                jBimprimirfuncActionPerformed(null);
            } else {
                JOptionPane.showMessageDialog(this, "Selecione uma linha para deletar!");
            }
        } catch (Exception ex) {
            Logger.getLogger(ListarFunc.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBdeletarfuncActionPerformed

    private void jBhome5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBhome5ActionPerformed
        // TODO add your handling code here:
        Home home = new Home();
        home.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBhome5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListarFunc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListarFunc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListarFunc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListarFunc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListarFunc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBatualizarfunc1;
    private javax.swing.JButton jBdeletarfunc;
    private javax.swing.JButton jBhome5;
    private javax.swing.JButton jBimprimirfunc;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTable jTlistarfunc;
    // End of variables declaration//GEN-END:variables
}
